# Log de alterações — recup.php
Data: 2025-08-19 
hora: 00:43
Autor: Marcos (alterações sugeridas/aplicadas)
Versão: 1.0.0

Resumo
- Objetivo: permitir envio de link de redefinição de senha a partir de localhost, com fallback seguro e compatível com testes locais e com Gmail SMTP.
- Arquivo alterado: senhas/recup.php
- Principais mudanças: integração PHPMailer, verificação de autoload, envio via SMTP (local ou Gmail), tratamento de erros/depuração, boas práticas de segurança (variáveis de ambiente), instruções de teste/rollback.

Detalhamento das alterações (por seções)
1) Verificação e carregamento do autoload (composer)
- O que foi adicionado:
  - Checagem de existência de `vendor/autoload.php`.
  - Mensagem clara e encerramento caso as dependências não estejam instaladas.
- Por quê:
  - Evita erro fatal obscuro quando PHPMailer não está presente e orienta o desenvolvedor a instalar via Composer.
- Comando relacionado:
  - composer require phpmailer/phpmailer

2) Inclusão do autoload e uso do namespace PHPMailer
- O que foi adicionado:
  - `require __DIR__ . '/../vendor/autoload.php';`
  - `use PHPMailer\PHPMailer\PHPMailer;`
- Por quê:
  - Permite usar a biblioteca instalada via Composer e instanciar PHPMailer corretamente.

3) Substituição do uso de mail() pelo PHPMailer (SMTP)
- O que foi alterado:
  - Removido (ou desviado) o bloco que usava `mail(...)`.
  - Adicionado bloco que instancia `new \PHPMailer\PHPMailer\PHPMailer(true)` e configura SMTP.
- Opções fornecidas:
  - SMTP Local (smtp4dev / MailHog) — Host=localhost, Port=1025, SMTPAuth=false, SMTPAutoTLS=false.
  - Gmail SMTP — Host=smtp.gmail.com, SMTPAuth=true, Username e Password (App Password), SMTPSecure=STARTTLS, Port=587.
- Por quê:
  - `mail()` normalmente não funciona em WAMP/Windows sem configuração adicional; PHPMailer + SMTP é confiável e testável localmente.

4) Envelope From / Sender
- O que foi ajustado:
  - Uso de um From válido (`setFrom`) — preferencialmente o email autenticado no SMTP (ex.: seu.email@gmail.com).
  - (Opcional) definição de `$mail->Sender` para envelope sender.
- Por quê:
  - Alguns servidores SMTP rejeitam envios com From inválido (ex.: no-reply@localhost).

5) Tratamento de erros e depuração
- O que foi adicionado:
  - Blocos try/catch específicos para `\PHPMailer\PHPMailer\Exception` e `\Exception`.
  - Em modo de desenvolvimento, `SMTPDebug = 2` pode ser ativado para obter mais logs.
  - Mensagens de fallback: exibir link de redefinição no navegador quando o envio falha (apenas para desenvolvimento).
- Por quê:
  - Facilita diagnóstico em localhost e fornece feedback ao usuário em ambiente de desenvolvimento.
- Observação:
  - Remover `SMTPDebug` e não exibir link em produção.

6) SSL/Certificados (desenvolvimento)
- O que foi adicionado:
  - Para desenvolvimento, `SMTPOptions` com `verify_peer`/`allow_self_signed` desativados (apenas dev).
- Por quê:
  - Evita problemas com certificados autoassinados durante testes locais.
- Observação:
  - Remover/ajustar em produção (usar verificação adequada).

7) Credenciais — variáveis de ambiente
- O que foi recomendado:
  - Ler `SMTP_USER` e `SMTP_PASS` via getenv() e nunca deixar senha em claro no código.
  - Instrução de como definir variáveis no Windows (setx).
- Por quê:
  - Segurança: evita vazamento de credenciais no repositório.

8) Mensagem de sucesso / fallback
- Comportamento:
  - Em envio bem-sucedido: mostrar mensagem de sucesso.
  - Em falha: mostrar mensagem de erro com motivo e, para dev, o link direto.
- Observação de segurança:
  - Não exibir o link de redefinição em produção (risco de exposição). Em produção, registrar o link no log interno e enviar apenas por email.

9) Debug do Intelephense
- Causa dos erros anteriores:
  - Intelephense mostrou "Undefined type" porque `vendor`/PHPMailer não estava instalado ou VSCode não foi reiniciado.
- Solução:
  - Executar `composer require phpmailer/phpmailer`, `composer dump-autoload`, e reiniciar VSCode/Intelephense.

Como testar (passo a passo local)
1. No terminal do projeto:
   - cd c:\wamp64\www\proyecto
   - composer require phpmailer/phpmailer
2. Para testes locais (sem conta real):
   - Instale e execute smtp4dev ou MailHog (Windows).
   - Deixe PHPMailer configurado para Host=localhost, Port=1025, SMTPAuth=false, SMTPAutoTLS=false.
3. Para testes com Gmail:
   - Ative 2FA no Google e gere uma App Password em "Segurança → App passwords".
   - Defina variáveis de ambiente:
     - setx SMTP_USER "seu.email@gmail.com"
     - setx SMTP_PASS "SUA_APP_PASSWORD"
   - Configure PHPMailer com smtp.gmail.com, SMTPAuth=true, SMTPSecure=STARTTLS, Port=587.
4. Reinicie Apache (WAMP) e VSCode.
5. Acesse o formulário, solicite o link e observe:
   - Mensagem de sucesso.
   - Em smtp4dev/MailHog, abra a interface web para ver o email capturado.
   - Em Gmail, verifique a caixa de entrada do destinatário.

Boas práticas / próximas ações antes de ir pra produção
- Usar HTTPS e domínio real (não localhost).
- Remover debug e não mostrar link na tela.
- Armazenar tokens com expiração curta e marcar como usados após troca de senha.
- Rate-limit em endpoints de recuperação de senha.
- Registrar eventos (tentativas de reset) em log seguro.
- Mover credenciais para arquivo de configuração fora do repositório ou usar um vault.

Rollback
- Se quiser voltar à versão anterior:
  - Substituir o arquivo `senhas/recup.php` pelo backup anterior (mantido no controle de versão).
  - Remover as linhas de require/autoload se não usar composer.

Anexos / referências rápidas
- Composer PHPMailer: https://github.com/PHPMailer/PHPMailer
- smtp4dev (Windows) via Chocolatey: choco install smtp4dev -y
- MailHog: https://github.com/mailhog/MailHog

Fim do log.

